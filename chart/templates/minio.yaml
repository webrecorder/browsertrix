{{- if .Values.minio_local }}

---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: minio-storage-pvc
  annotations:
    "helm.sh/resource-policy": keep
spec:
  accessModes:
    - ReadWriteOnce

  resources:
    requests:
      storage: 5Gi

  {{- if .Values.volume_storage_class }}
  storageClassName: {{ .Values.volume_storage_class }}
  {{- end }}


---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: local-minio
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      app: local-minio

  replicas: 1
  template:
    metadata:
      labels:
        app: local-minio

    spec:
      {{- if .Values.main_node_type }}
      nodeSelector:
        nodeType: {{ .Values.main_node_type }}
      {{- end }}

      volumes:
        - name: data-minio
          persistentVolumeClaim:
            claimName: minio-storage-pvc

      initContainers:
        - name: init-bucket
          image: {{ .Values.minio_image }}
          imagePullPolicy: {{ .Values.minio_pull_policy }}

          command: ['/bin/sh']
          args: ["mkdir", "-p", "/data/{{ .Values.minio_local_bucket_name }}" ]

          volumeMounts:
            - name: data-minio
              mountPath: /data
              subPath: minio

      containers:
        - name: minio
          image: {{ .Values.minio_image }}
          imagePullPolicy: {{ .Values.minio_pull_policy }}
          args: ["server", "/data", "--console-address", ":9001"]
          envFrom:
            - secretRef:
                name: auth-secrets

          volumeMounts:
            - name: data-minio
              mountPath: /data
              subPath: minio

---
apiVersion: v1
kind: Service

metadata:
  namespace: {{ .Release.Namespace }}
  name: local-minio
  labels:
    app: local-minio

spec:
  type: NodePort
  selector:
    app: local-minio

  ports:
    - protocol: TCP
      port: 9000
      name: minio

    - protocol: TCP
      port: 9001
      name: minio-console

{{- end }}


